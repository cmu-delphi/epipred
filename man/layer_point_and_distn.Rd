% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_point_and_distn.R
\name{layer_point_and_distn}
\alias{layer_point_and_distn}
\title{returns both the point estimate and the quantile distribution}
\usage{
layer_point_and_distn(
  frosting,
  trainer,
  ...,
  levels = c(0.25, 0.75),
  symmetrize = TRUE,
  by_key = character(0L),
  distn_name = ".pred_distn",
  point_name = NULL,
  distn_id = NULL,
  point_id = NULL,
  point_type = c("median", "mean"),
  truncate = c(-Inf, Inf),
  use_predictive_distribution = FALSE,
  dist_type = "gaussian"
)
}
\arguments{
\item{frosting}{a \code{frosting} postprocessor}

\item{...}{Unused, include for consistency with other layers.}

\item{levels}{a vector of probabilities (quantiles) to extract}

\item{symmetrize}{logical. If \code{TRUE} then interval will be symmetric.
Applies for residual quantiles only}

\item{by_key}{A character vector of keys to group the residuals by before
calculating quantiles. The default, \code{c()} performs no grouping. Only used
by \code{layer_residual_quantiles}}

\item{distn_name}{an alternate name for the distribution column; defaults
to \code{.pred_distn}.}

\item{point_name}{an alternate name for the point estimate column; defaults
to \code{.pred}.}

\item{distn_id}{a random id string for the layer that creates the quantile
estimate}

\item{point_id}{a random id string for the layer that creates the point
estimate. Only present for trainers that produce quantiles}

\item{point_type}{character. Either \code{mean} or \code{median}.}

\item{truncate}{Do we truncate the distribution to an interval}

\item{use_predictive_distribution}{only usable for \code{linear_reg} type models}

\item{distn_type}{character. Only used if \code{use_predictive_distribution=TRUE},
for \code{linear_reg} type models. Either gaussian or student_t}
}
\value{
an updated \verb{frosting postprocessor} with an additional prediction
column; if the trainer produces a point estimate, it has added a
distribution estimate, and vice versa.
}
\description{
This function adds a frosting layer that produces both a point estimate as
well as quantile estimates.
}
