% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epidf_predict.R
\name{epidf_predict}
\alias{epidf_predict}
\title{A wrapper function for making predictions such that if \code{new_data}
has class \code{epi_df}, then the keys are kept in the prediction}
\usage{
epidf_predict(obj, new_data, ahead, forecast_date = NULL)
}
\arguments{
\item{obj}{A model object for which prediction is desired.}

\item{new_data}{Input data for which to predict values.}

\item{ahead}{A numeric value indicating how far ahead in the future
to make forecasts.}

\item{forecast_date}{The date to which these forecasts correspond.
Default is \code{NULL}.}
}
\value{
An object of class \code{epi_df} with all keys from \code{new_data}.
}
\description{
A wrapper function for making predictions such that if \code{new_data}
has class \code{epi_df}, then the keys are kept in the prediction
}
\details{
To use this function properly either specify an ahead value (and
leave the forecast date unspecifed) or specify a forecast date. In the
former, the forecast date will be set as the maximum time value plus
the ahead value. In that case, as well as in the case when the
forecast date is less than the most recent update date of the data
(ie. the \code{as_of} value), an appropriate warning will be thrown.
}
\examples{
set.seed(2034)
n <- 100
tib <- dplyr::tibble(
  x = rnorm(n), y = x + rnorm(n),
  time_value = seq(as.Date("2020-01-01"), by = 1, length.out = n),
  geo_value = "ca"
) \%>\% epiprocess::as_epi_df(as_of = "2020-04-12")

obj <- lm(y ~ x, data = tib)
newdata <- tib \%>\%
 dplyr::slice_tail(n = 1)

# Now let's predict under various circumstances
# ahead specified and forecast_date = NULL
epidf_predict(obj, newdata, ahead = 7)
# forecast_date = as_of
epidf_predict(obj, newdata, forecast_date = "2020-04-12")
# max_time_value < as_of < forecast_date
epidf_predict(obj, newdata, forecast_date = "2020-04-14")
# forecast_date < max_time_value < as_of
epidf_predict(obj, newdata, forecast_date = "2020-04-08")
# max time_value < forecast_date < as_of
epidf_predict(obj, newdata, forecast_date = "2020-04-11")
}
