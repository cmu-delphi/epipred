% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pivot_quantiles.R
\name{pivot_quantiles_longer}
\alias{pivot_quantiles_longer}
\title{Pivot columns containing \code{dist_quantile} longer}
\usage{
pivot_quantiles_longer(.data, ..., .ignore_length_check = FALSE)
}
\arguments{
\item{.data}{A data frame, or a data frame extension such as a tibble or
epi_df.}

\item{...}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> One or more unquoted
expressions separated by commas. Variable names can be used as if they
were positions in the data frame, so expressions like \code{x:y} can
be used to select a range of variables.}

\item{.ignore_length_check}{If multiple columns are selected, as long as
each row has contains the same number of quantiles, the result will be
reasonable. But if, for example, \code{var1[1]} has 5 quantiles while \code{var2[1]}
has 7, then the only option would be to recycle everything, creating a
\emph{very} long result. By default, this would throw an error. But if this is
really the goal, then the error can be bypassed by setting this argument
to \code{TRUE}. The quantiles in the first selected column will vary the fastest.}
}
\value{
An object of the same class as \code{.data}.
}
\description{
Selected columns that contain \code{dist_quantiles} will be "lengthened" with
the quantile levels serving as 1 column and the values as another. If
multiple columns are selected, these will be prefixed with the column name.
}
\examples{
d1 <- c(dist_quantiles(1:3, 1:3 / 4), dist_quantiles(2:4, 1:3 / 4))
d2 <- c(dist_quantiles(2:4, 2:4 / 5), dist_quantiles(3:5, 2:4 / 5))
tib <- tibble(g = c("a", "b"), d1 = d1, d2 = d2)

pivot_quantiles_longer(tib, "d1")
pivot_quantiles_longer(tib, dplyr::ends_with("1"))
pivot_quantiles_longer(tib, d1, d2)
}
