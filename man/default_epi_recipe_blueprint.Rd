% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blueprint-epi_recipe-default.R
\name{default_epi_recipe_blueprint}
\alias{default_epi_recipe_blueprint}
\title{Default epi_recipe blueprint}
\usage{
default_epi_recipe_blueprint(
  intercept = FALSE,
  allow_novel_levels = FALSE,
  fresh = TRUE,
  strings_as_factors = FALSE,
  composition = "tibble"
)
}
\arguments{
\item{intercept}{A logical. Should an intercept be included in the
processed data? This information is used by the \code{process} function
in the \code{mold} and \code{forge} function list.}

\item{allow_novel_levels}{A logical. Should novel factor levels be allowed at
prediction time? This information is used by the \code{clean} function in the
\code{forge} function list, and is passed on to \code{\link[hardhat:scream]{scream()}}.}

\item{fresh}{Should already trained operations be re-trained when \code{prep()} is
called?}

\item{strings_as_factors}{Should character columns be converted to factors
when \code{prep()} is called?}

\item{composition}{Either "tibble", "matrix", or "dgCMatrix" for the format
of the processed predictors. If "matrix" or "dgCMatrix" are chosen, all of
the predictors must be numeric after the preprocessing method has been
applied; otherwise an error is thrown.}
}
\value{
A \code{epi_recipe} blueprint.
}
\description{
Recipe blueprint that accounts for \code{epi_df} panel data
Used for simplicity. See \code{\link[hardhat:default_recipe_blueprint]{hardhat::default_recipe_blueprint()}} for more
details. This subclass is nearly the same, except it ensures that
downstream processing doesn't drop the epi_df class from the data.
}
\keyword{internal}
