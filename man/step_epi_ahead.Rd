% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_ahead.R, R/epi_lag.R
\name{step_epi_ahead}
\alias{step_epi_ahead}
\alias{step_epi_lag}
\title{Create a leading outcome}
\usage{
step_epi_ahead(
  recipe,
  ...,
  role = "outcome",
  trained = FALSE,
  ahead = 1,
  prefix = "ahead_",
  default = NA,
  keys = epi_keys(recipe),
  columns = NULL,
  skip = FALSE,
  id = rand_id("epi_ahead")
)

step_epi_lag(
  recipe,
  ...,
  role = "predictor",
  trained = FALSE,
  lag = 1,
  prefix = "lag_",
  default = NA,
  keys = epi_keys(recipe),
  columns = NULL,
  skip = FALSE,
  id = rand_id("epi_lag")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose variables
for this step. See \code{\link[=selections]{selections()}} for more details.}

\item{role}{For model terms created by this step, what analysis role should
they be assigned?}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{ahead}{A vector of positive integers. Each specified column will be
lead for each value in the vector.}

\item{prefix}{A prefix for generated column names, default to "ahead_".}

\item{default}{Determines what fills empty rows
left by leading/lagging (defaults to NA).}

\item{keys}{A character vector of the keys in an epi_df}

\item{columns}{A character string of variable names that will
be populated (eventually) by the \code{terms} argument.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake]{bake()}}? While all operations are baked
when \code{\link[=prep]{prep()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{lag}{A vector of positive integers. Each specified column will be
lagged for each value in the vector.}
}
\value{
An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.

An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.
}
\description{
\code{step_epi_ahead} creates a \emph{specification} of a recipe step that
will add new columns of leading data. Leading data will
by default include NA values where the lag was induced.
These can be removed with \code{\link[=step_naomit]{step_naomit()}}, or you may
specify an alternative filler value with the \code{default}
argument.

\code{step_epi_lag} creates a \emph{specification} of a recipe step that
will add new columns of lagged data. Lagged data will
by default include NA values where the lag was induced.
These can be removed with \code{\link[=step_naomit]{step_naomit()}}, or you may
specify an alternative filler value with the \code{default}
argument.
}
\details{
The step assumes that the data are already \emph{in the proper sequential
order} for leading.

The step assumes that the data are already \emph{in the proper sequential
order} for lagging.
}
\examples{
tib <- tibble::tibble(
  x = 1:5, y = 1:5,
  time_value = seq(as.Date("2020-01-01"), by = 1, length.out = 5),
  geo_value = "ca"
  ) \%>\% epiprocess::as_epi_df()

library(recipes)
epi_recipe(y ~ x, data = tib) \%>\%
  step_epi_lag(x, lag = 2:3) \%>\%
  step_epi_ahead(y, ahead = 1) \%>\%
  prep(tib) \%>\%
  bake(tib)
}
\concept{row operation steps}
