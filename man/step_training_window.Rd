% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_training_window.R
\name{step_training_window}
\alias{step_training_window}
\title{Limits the size of the training window to the most recent observations}
\usage{
step_training_window(
  recipe,
  role = NA,
  n_recent = 50,
  epi_keys = NULL,
  id = rand_id("training_window")
)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{role}{For model terms created by this step, what analysis role should
they be assigned? \code{lag} is default a predictor while \code{ahead} is an outcome.}

\item{n_recent}{An integer value that represents the number of most recent
observations that are to be kept in the training window per key
The default value is 50.}

\item{epi_keys}{An optional character vector for specifying "key" variables
to group on. The default, \code{NULL}, ensures that every key combination is
limited.}

\item{id}{A unique identifier for the step}
}
\value{
An updated version of \code{recipe} with the new step added to the
sequence of any existing operations.
}
\description{
\code{step_training_window} creates a \emph{specification} of a recipe step that
limits the size of the training window to the \code{n_recent} most recent
observations in \code{time_value} per group, where the groups are formed
based on the remaining \code{epi_keys}.
}
\details{
Note that \code{step_epi_lead()} and \code{step_epi_lag()} should come
after any filtering step.
}
\examples{
tib <- tibble(
  x = 1:10,
  y = 1:10,
  time_value = rep(seq(as.Date("2020-01-01"), by = 1, length.out = 5), 2),
  geo_value = rep(c("ca", "hi"), each = 5)
) \%>\%
  as_epi_df()

recipe(y ~ x, data = tib) \%>\%
  step_training_window(n_recent = 3) \%>\%
  prep(tib) \%>\%
  bake(new_data = NULL)

library(recipes)
recipe(y ~ x, data = tib) \%>\%
  step_naomit() \%>\%
  step_training_window(n_recent = 3) \%>\%
  prep(tib) \%>\%
  bake(new_data = NULL)
}
